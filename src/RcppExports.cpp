// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fc_lowrank_linear_constr_ui
arma::mat fc_lowrank_linear_constr_ui(int m, int r, int s, int dimvartheta);
RcppExport SEXP _EDCCGARCH_fc_lowrank_linear_constr_ui(SEXP mSEXP, SEXP rSEXP, SEXP sSEXP, SEXP dimvarthetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type dimvartheta(dimvarthetaSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_lowrank_linear_constr_ui(m, r, s, dimvartheta));
    return rcpp_result_gen;
END_RCPP
}
// fc_lowrank_linear_constr_ci
arma::vec fc_lowrank_linear_constr_ci(int m, int r, int s);
RcppExport SEXP _EDCCGARCH_fc_lowrank_linear_constr_ci(SEXP mSEXP, SEXP rSEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_lowrank_linear_constr_ci(m, r, s));
    return rcpp_result_gen;
END_RCPP
}
// fc_lowrank_mathcalLtilde_n
double fc_lowrank_mathcalLtilde_n(int n, int m, int r, int s, int Bk, arma::vec vartheta_vec, arma::mat y_m_n);
RcppExport SEXP _EDCCGARCH_fc_lowrank_mathcalLtilde_n(SEXP nSEXP, SEXP mSEXP, SEXP rSEXP, SEXP sSEXP, SEXP BkSEXP, SEXP vartheta_vecSEXP, SEXP y_m_nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type Bk(BkSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vartheta_vec(vartheta_vecSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_m_n(y_m_nSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_lowrank_mathcalLtilde_n(n, m, r, s, Bk, vartheta_vec, y_m_n));
    return rcpp_result_gen;
END_RCPP
}
// fc_dmathcalLtilde_dvartheta
arma::vec fc_dmathcalLtilde_dvartheta(int n, int m, int r, int s, int Bk, arma::vec vartheta_vec, arma::mat y_m_n);
RcppExport SEXP _EDCCGARCH_fc_dmathcalLtilde_dvartheta(SEXP nSEXP, SEXP mSEXP, SEXP rSEXP, SEXP sSEXP, SEXP BkSEXP, SEXP vartheta_vecSEXP, SEXP y_m_nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type Bk(BkSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vartheta_vec(vartheta_vecSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_m_n(y_m_nSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_dmathcalLtilde_dvartheta(n, m, r, s, Bk, vartheta_vec, y_m_n));
    return rcpp_result_gen;
END_RCPP
}
// fc_varthetaTOtheta_general
arma::vec fc_varthetaTOtheta_general(int m, int r, int s, arma::vec varthetahat);
RcppExport SEXP _EDCCGARCH_fc_varthetaTOtheta_general(SEXP mSEXP, SEXP rSEXP, SEXP sSEXP, SEXP varthetahatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type varthetahat(varthetahatSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_varthetaTOtheta_general(m, r, s, varthetahat));
    return rcpp_result_gen;
END_RCPP
}
// fc_derivative_of_transformation_function
arma::mat fc_derivative_of_transformation_function(int m, int r, int s, arma::vec vartheta_vec);
RcppExport SEXP _EDCCGARCH_fc_derivative_of_transformation_function(SEXP mSEXP, SEXP rSEXP, SEXP sSEXP, SEXP vartheta_vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vartheta_vec(vartheta_vecSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_derivative_of_transformation_function(m, r, s, vartheta_vec));
    return rcpp_result_gen;
END_RCPP
}
// fc_lowrank_ASD_thetahat
arma::vec fc_lowrank_ASD_thetahat(int n, int m, int r, int s, int Bk, arma::vec thetahat, arma::mat y_m_n, arma::mat Deltahat_theta_vartheta);
RcppExport SEXP _EDCCGARCH_fc_lowrank_ASD_thetahat(SEXP nSEXP, SEXP mSEXP, SEXP rSEXP, SEXP sSEXP, SEXP BkSEXP, SEXP thetahatSEXP, SEXP y_m_nSEXP, SEXP Deltahat_theta_varthetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type Bk(BkSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type thetahat(thetahatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_m_n(y_m_nSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Deltahat_theta_vartheta(Deltahat_theta_varthetaSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_lowrank_ASD_thetahat(n, m, r, s, Bk, thetahat, y_m_n, Deltahat_theta_vartheta));
    return rcpp_result_gen;
END_RCPP
}
// fc_general_linear_constr_ui
arma::mat fc_general_linear_constr_ui(int m, int r, int s, int dimtheta);
RcppExport SEXP _EDCCGARCH_fc_general_linear_constr_ui(SEXP mSEXP, SEXP rSEXP, SEXP sSEXP, SEXP dimthetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type dimtheta(dimthetaSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_general_linear_constr_ui(m, r, s, dimtheta));
    return rcpp_result_gen;
END_RCPP
}
// fc_general_linear_constr_ci
arma::vec fc_general_linear_constr_ci(int m, int r, int s);
RcppExport SEXP _EDCCGARCH_fc_general_linear_constr_ci(SEXP mSEXP, SEXP rSEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_general_linear_constr_ci(m, r, s));
    return rcpp_result_gen;
END_RCPP
}
// fc_general_mathcalLtilde_n
double fc_general_mathcalLtilde_n(int n, int m, int r, int s, int Bk, arma::vec theta_vec, arma::mat y_m_n);
RcppExport SEXP _EDCCGARCH_fc_general_mathcalLtilde_n(SEXP nSEXP, SEXP mSEXP, SEXP rSEXP, SEXP sSEXP, SEXP BkSEXP, SEXP theta_vecSEXP, SEXP y_m_nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type Bk(BkSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_vec(theta_vecSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_m_n(y_m_nSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_general_mathcalLtilde_n(n, m, r, s, Bk, theta_vec, y_m_n));
    return rcpp_result_gen;
END_RCPP
}
// fc_dmathcalLtilde_dtheta
arma::vec fc_dmathcalLtilde_dtheta(int n, int m, int r, int s, int Bk, arma::vec theta_vec, arma::mat y_m_n);
RcppExport SEXP _EDCCGARCH_fc_dmathcalLtilde_dtheta(SEXP nSEXP, SEXP mSEXP, SEXP rSEXP, SEXP sSEXP, SEXP BkSEXP, SEXP theta_vecSEXP, SEXP y_m_nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type Bk(BkSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_vec(theta_vecSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_m_n(y_m_nSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_dmathcalLtilde_dtheta(n, m, r, s, Bk, theta_vec, y_m_n));
    return rcpp_result_gen;
END_RCPP
}
// fc_general_ASD_thetahat
arma::vec fc_general_ASD_thetahat(int n, int m, int r, int s, int Bk, arma::vec thetahat, arma::mat y_m_n);
RcppExport SEXP _EDCCGARCH_fc_general_ASD_thetahat(SEXP nSEXP, SEXP mSEXP, SEXP rSEXP, SEXP sSEXP, SEXP BkSEXP, SEXP thetahatSEXP, SEXP y_m_nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type Bk(BkSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type thetahat(thetahatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_m_n(y_m_nSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_general_ASD_thetahat(n, m, r, s, Bk, thetahat, y_m_n));
    return rcpp_result_gen;
END_RCPP
}
// fc_transfmat_theta_to_vecPhi1
arma::mat fc_transfmat_theta_to_vecPhi1(int m, int r, int s, int dimtheta);
RcppExport SEXP _EDCCGARCH_fc_transfmat_theta_to_vecPhi1(SEXP mSEXP, SEXP rSEXP, SEXP sSEXP, SEXP dimthetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type dimtheta(dimthetaSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_transfmat_theta_to_vecPhi1(m, r, s, dimtheta));
    return rcpp_result_gen;
END_RCPP
}
// fc_lowrank_ASD_vecPhi1hat
arma::vec fc_lowrank_ASD_vecPhi1hat(int n, int m, int r, int s, int Bk, arma::vec thetahat, arma::mat y_m_n, arma::mat Deltahat_theta_vartheta);
RcppExport SEXP _EDCCGARCH_fc_lowrank_ASD_vecPhi1hat(SEXP nSEXP, SEXP mSEXP, SEXP rSEXP, SEXP sSEXP, SEXP BkSEXP, SEXP thetahatSEXP, SEXP y_m_nSEXP, SEXP Deltahat_theta_varthetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type Bk(BkSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type thetahat(thetahatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_m_n(y_m_nSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Deltahat_theta_vartheta(Deltahat_theta_varthetaSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_lowrank_ASD_vecPhi1hat(n, m, r, s, Bk, thetahat, y_m_n, Deltahat_theta_vartheta));
    return rcpp_result_gen;
END_RCPP
}
// fc_general_ASD_vecPhi1hat
arma::vec fc_general_ASD_vecPhi1hat(int n, int m, int r, int s, int Bk, arma::vec thetahat, arma::mat y_m_n);
RcppExport SEXP _EDCCGARCH_fc_general_ASD_vecPhi1hat(SEXP nSEXP, SEXP mSEXP, SEXP rSEXP, SEXP sSEXP, SEXP BkSEXP, SEXP thetahatSEXP, SEXP y_m_nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type Bk(BkSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type thetahat(thetahatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y_m_n(y_m_nSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_general_ASD_vecPhi1hat(n, m, r, s, Bk, thetahat, y_m_n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_EDCCGARCH_fc_lowrank_linear_constr_ui", (DL_FUNC) &_EDCCGARCH_fc_lowrank_linear_constr_ui, 4},
    {"_EDCCGARCH_fc_lowrank_linear_constr_ci", (DL_FUNC) &_EDCCGARCH_fc_lowrank_linear_constr_ci, 3},
    {"_EDCCGARCH_fc_lowrank_mathcalLtilde_n", (DL_FUNC) &_EDCCGARCH_fc_lowrank_mathcalLtilde_n, 7},
    {"_EDCCGARCH_fc_dmathcalLtilde_dvartheta", (DL_FUNC) &_EDCCGARCH_fc_dmathcalLtilde_dvartheta, 7},
    {"_EDCCGARCH_fc_varthetaTOtheta_general", (DL_FUNC) &_EDCCGARCH_fc_varthetaTOtheta_general, 4},
    {"_EDCCGARCH_fc_derivative_of_transformation_function", (DL_FUNC) &_EDCCGARCH_fc_derivative_of_transformation_function, 4},
    {"_EDCCGARCH_fc_lowrank_ASD_thetahat", (DL_FUNC) &_EDCCGARCH_fc_lowrank_ASD_thetahat, 8},
    {"_EDCCGARCH_fc_general_linear_constr_ui", (DL_FUNC) &_EDCCGARCH_fc_general_linear_constr_ui, 4},
    {"_EDCCGARCH_fc_general_linear_constr_ci", (DL_FUNC) &_EDCCGARCH_fc_general_linear_constr_ci, 3},
    {"_EDCCGARCH_fc_general_mathcalLtilde_n", (DL_FUNC) &_EDCCGARCH_fc_general_mathcalLtilde_n, 7},
    {"_EDCCGARCH_fc_dmathcalLtilde_dtheta", (DL_FUNC) &_EDCCGARCH_fc_dmathcalLtilde_dtheta, 7},
    {"_EDCCGARCH_fc_general_ASD_thetahat", (DL_FUNC) &_EDCCGARCH_fc_general_ASD_thetahat, 7},
    {"_EDCCGARCH_fc_transfmat_theta_to_vecPhi1", (DL_FUNC) &_EDCCGARCH_fc_transfmat_theta_to_vecPhi1, 4},
    {"_EDCCGARCH_fc_lowrank_ASD_vecPhi1hat", (DL_FUNC) &_EDCCGARCH_fc_lowrank_ASD_vecPhi1hat, 8},
    {"_EDCCGARCH_fc_general_ASD_vecPhi1hat", (DL_FUNC) &_EDCCGARCH_fc_general_ASD_vecPhi1hat, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_EDCCGARCH(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
